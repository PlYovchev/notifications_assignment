version: '3'
services:
    notifications_service: 
        build: .
        environment:
            - PORT=5050
            - environment=docker
            - logLevel=debug
        restart: always
        deploy:
            replicas: 3
        networks:
            - internal
        labels:
           - "autoheal=true"
        healthcheck:
            test: curl --fail http://localhost:5050/status || exit 1
            interval: 1m
            timeout: 30s
            retries: 3
            start_period: 30s
        depends_on:
            postgres:
                condition: service_healthy

    nginx:
        image: nginx:alpine
        ports:
            - "3000:80"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - internal
        depends_on:
            - notifications_service

    postgres:
        image: postgres:16-alpine
        hostname: postgres
        ports:
            - 5432:5432
        volumes:
            # - ./database/postgres:/var/lib/postgresql/data
            - ./database/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
        environment:
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_DB=postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
        networks:
            - internal
            
    autoheal:
        image: willfarrell/autoheal:latest
        tty: true
        restart: always
        environment:
            - AUTOHEAL_INTERVAL=60
            - AUTOHEAL_START_PERIOD=300
            - AUTOHEAL_DEFAULT_STOP_TIMEOUT=10
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

networks:
    internal:
        driver: bridge      